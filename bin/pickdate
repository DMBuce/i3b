#!/bin/bash
# rofi date picker

# defaults
default_format='%F'
default_cal='cal'
default_buttons=' <:<<: .:>>: >'
default_attrs='bgcolor="#285577" fgcolor="#ffffff" weight="bold"'
custom_keybinds='
	kb-custom-1: "p";
	kb-custom-2: "n";
	kb-custom-3: "P,less";
	kb-custom-4: "N,greater";
	kb-custom-5: "period";'
default_themestr='configuration {'"$custom_keybinds"'
	kb-move-char-back: "h,Left,Control+b";
	kb-move-char-forward: "l,Right,Control+f";
	kb-row-up: "k,Up,Control+p,ISO_Left_Tab";
	kb-row-down: "j,Down,Control+n";
}'

# environment variables
PICKDATE_FMT="${PICKDATE_FMT-$default_format}"
PICKDATE_CAL="${PICKDATE_CAL-$default_cal}"
PICKDATE_BUTTONS="${PICKDATE_BUTTONS-$default_buttons}"
PICKDATE_SPANATTRS="${PICKDATE_SPANATTRS-$default_attrs}"
PICKDATE_THEMESTR="${PICKDATE_THEMESTR-$default_themestr}"

# prints message to stderr
warn() {
	local message="$1"
	shift
	printf "$message\n" "$@" >&2
}

# prints error and exits
die() {
	[[ "$1" =~ ^[0-9]+$ ]] && { retval="$1"; shift; }
	warn "$@"
	exit ${retval-1}
}

# parse $PICKDATE_BUTTONS
IFS=: read -a b <<< "$PICKDATE_BUTTONS"
buttons=()
(( ${#b[@]} )) && buttons=(
	"${b[0]:- }" "${b[1]:- }" " " "${b[2]:- }" " " "${b[3]:- }" "${b[4]:- }"
)

# prints rofi selections from $days part of `cal` output
selections() {
	local days="$*"
	local w="$2"
	for i in {0..6}; do
		cut -c $((i*w+1))-$((i*w+w-1)) <<< "$days"
		echo "${buttons[i]}"
	done
}

# print usage
prog="${0##*/}"
usage="Usage: $prog [FORMAT] [DATE]

    Pick a date starting from DATE's month using rofi. FORMAT controls
    the output. The following keybindings are available.

        p/n        Go to previous/next month
        P/N, </>   Go to previous/next year
        .          Jump to current month
        h/j/k/l    Vim-like movement (default movement bindings also work)

Environment Variables:

    PICKDATE_FMT:         The date format to use if no FORMAT is provided.
    PICKDATE_CAL:         The calendar command to use.
    PICKDATE_BUTTONS:     Colon-delimited list of buttons shown on the bottom.
    PICKDATE_SPANATTRS:   Pango <span> attributes used on the weekday header.
    PICKDATE_THEMESTR:    Theme string used to override config.rasi .

Defaults:

    PICKDATE_FMT='%$default_format'
    PICKDATE_CAL='$default_cal'
    PICKDATE_BUTTONS='$default_buttons'
    # see https://docs.gtk.org/Pango/pango_markup.html
    PICKDATE_SPANATTRS='$default_attrs'
    PICKDATE_THEMESTR='${default_themestr//$'\n'/$'\n    '}'

See Also:

    rofi(1), rofi-keys(5), rofi-theme(5), cal(1), ncal(1)
"
if [[ "$*" == *--help* ]]; then
	die 0 "$usage"
fi

# parse args
if [[ -z "$ROFI_RETV" ]]; then
	export PICKDATE_FMT="${1-$PICKDATE_FMT}"
	export ROFI_INFO="$(date -d "${2-now}" +'%-Y-%-m')"
fi

# parse $ROFI_INFO
IFS=- read year month day junk <<< "$ROFI_INFO"
day="$(date +%-d)"

# adjust date if necessary
case "$ROFI_RETV:$1" in
10:*|"1:${b[0]}") # rofi kb-custom-1: go to prev month
	year=$(( month-1 < 1 ? year-1 : year))
	month=$((month-1 < 1 ? 12     : month-1))
	ROFI_RETV=0
;;
11:*|"1:${b[4]}") # rofi kb-custom-2: go to next month
	year=$(( month+1 > 12 ? year+1 : year))
	month=$((month+1 > 12 ? 1      : month+1))
	ROFI_RETV=0
;;
12:*|"1:${b[1]}") # rofi kb-custom-3: go to prev year
	year=$(( year-1 ))
	ROFI_RETV=0
;;
13:*|"1:${b[3]}") # rofi kb-custom-4: go to next year
	year=$(( year+1 ))
	ROFI_RETV=0
;;
14:*|"1:${b[2]}") # rofi kb-custom-5: go to current month
	IFS=- read year month <<< $(date +'%-Y-%-m')
	ROFI_RETV=0
;;
esac

# get days of month
cal="$($PICKDATE_CAL $month $year)"
prompt="$(awk 'NR==1 {print}' <<< "$cal")"
weekdays="$(awk 'NR==2 {print}' <<< "$cal")"
days="$(awk 'NR>2 {print}' <<< "$cal")"
cellwidth=$(( (${#weekdays}+1) / 7 ))

# figure out how the script was called
case "$ROFI_RETV" in
"") # script called directly by user

	# set styling
	themestr="configuration {
		$custom_keybinds
	}
	$PICKDATE_THEMESTR
	window { width: $((${#weekdays}+2))ch; }
	listview { columns:7; lines:$(( $(wc -l <<< "$days") + (${#b[@]}?1:0) )); scrollbar: false; }
	inputbar { children: [prompt]; }
	"

	# run rofi
	selected="$(selections "$days" $cellwidth | cat -n | awk "/\s$day\s*$/ {print \$1 - 1}")"
	trap 'rm -f "$_PICKDATE_TMP"' EXIT
	export _PICKDATE_TMP="$(mktemp --tmpdir "$prog.XXXXXXXXXX")" || exit 1
	rofi -show date -modi "date:$0" \
		-selected-row "$selected" \
		-theme-str "$themestr"
	cat "$_PICKDATE_TMP"
	exit
;;
0) # rofi: initial call of script
;;
1) # rofi: selected an entry
	day="$1"
	date -d "$year-$month-$day" +"${PICKDATE_FMT#+}" > "$_PICKDATE_TMP"
	exit
;;
2) # rofi: selected a custom entry
	warn "Custom entry selected. This shouldn't happen."
	die "If you didn't explicitly set \$ROFI_RETV, please report as a bug!"
;;
esac

# set rofi options
echo -en "\0prompt\x1f$prompt\n"
echo -en "\0message\x1f<span $PICKDATE_SPANATTRS>$weekdays </span>\n"
echo -en "\0no-custom\x1ftrue\n"
echo -en "\0use-hot-keys\x1ftrue\n"

# check if we're displaying current month
currentmonth=0
[[ "$year-$month" == $(date +'%-Y-%-m') ]] && currentmonth=1

# set rofi selections
selections "$days" $cellwidth | awk "
	$currentmonth && /^\s*$day\s*$/ {print \"\0active\x1f\" NR-1}
	/[0-9]/    {printf \$0 \"\0info\x1f$year-$month\n\"}
	/[a-zA-Z]/ {printf \$0 \"\0info\x1f$year-$month\x1fnonselectable\x1ftrue\n\"}
	/^\s*$/    {printf \$0 \"\0info\x1f$year-$month\x1fnonselectable\x1ftrue\n\"}
	/[^0-9a-zA-Z ]/ {printf \$0 \"\0info\x1f$year-$month\n\"}
"

